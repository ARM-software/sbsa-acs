diff -crB sts-2.1.2_orginal/sts-2.1.2/include/cephes.h sts-2.1.2/sts-2.1.2/include/cephes.h
*** sts-2.1.2_orginal/sts-2.1.2/include/cephes.h	2020-02-07 10:15:28.011200182 +0530
--- sts-2.1.2/sts-2.1.2/include/cephes.h	2020-02-06 13:15:21.122288105 +0530
***************
*** 2,7 ****
--- 2,10 ----
  #ifndef _CEPHES_H_
  #define _CEPHES_H_
  
+ #include "../../val/include/sbsa_avs_val.h"
+ #include "../../val/include/sbsa_avs_nist.h"
+ 
  double cephes_igamc(double a, double x);
  double cephes_igam(double a, double x);
  double cephes_lgam(double x);
diff -crB sts-2.1.2_orginal/sts-2.1.2/include/defs.h sts-2.1.2/sts-2.1.2/include/defs.h
*** sts-2.1.2_orginal/sts-2.1.2/include/defs.h	2020-02-07 10:15:28.011200182 +0530
--- sts-2.1.2/sts-2.1.2/include/defs.h	2020-02-06 13:15:21.118288188 +0530
***************
*** 8,15 ****
                                M A C R O S
   * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */
  
! #define MAX(x,y)             ((x) <  (y)  ? (y)  : (x))
! #define MIN(x,y)             ((x) >  (y)  ? (y)  : (x))
  #define isNonPositive(x)     ((x) <= 0.e0 ?   1  : 0)
  #define isPositive(x)        ((x) >  0.e0 ?   1 : 0)
  #define isNegative(x)        ((x) <  0.e0 ?   1 : 0)
--- 8,15 ----
                                M A C R O S
   * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */
  
! //#define MAX(x,y)             ((x) <  (y)  ? (y)  : (x))
! //#define MIN(x,y)             ((x) >  (y)  ? (y)  : (x))
  #define isNonPositive(x)     ((x) <= 0.e0 ?   1  : 0)
  #define isPositive(x)        ((x) >  0.e0 ?   1 : 0)
  #define isNegative(x)        ((x) <  0.e0 ?   1 : 0)
diff -crB sts-2.1.2_orginal/sts-2.1.2/src/assess.c sts-2.1.2/sts-2.1.2/src/assess.c
*** sts-2.1.2_orginal/sts-2.1.2/src/assess.c	2020-02-07 10:15:28.011200182 +0530
--- sts-2.1.2/sts-2.1.2/src/assess.c	2020-02-06 13:16:06.229346560 +0530
***************
*** 118,124 ****
  	int		i, k, m, j, start, end, num, numread;
  	float	c;
  	FILE	**fp = (FILE **)calloc(numOfFiles+1, sizeof(FILE *));
- 	int		*results = (int *)calloc(numOfFiles, sizeof(int *));
  	char	*s[MAXFILESPERMITTEDFORPARTITION];
  	char	resultsDir[200];
  	
--- 118,123 ----
***************
*** 284,290 ****
  {
  	int		j, pos, count, passCount, sampleSize, expCount, proportion_threshold_min, proportion_threshold_max;
  	int		freqPerBin[10] = { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 };
! 	double	*A, *T, chi2, proportion, uniformity, p_hat, tmp;
  	float	c;
  	FILE	*fp;
  	
--- 283,289 ----
  {
  	int		j, pos, count, passCount, sampleSize, expCount, proportion_threshold_min, proportion_threshold_max;
  	int		freqPerBin[10] = { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 };
! 	double	*A, *T, chi2, uniformity, p_hat;
  	float	c;
  	FILE	*fp;
  	
diff -crB sts-2.1.2_orginal/sts-2.1.2/src/frequency.c sts-2.1.2/sts-2.1.2/src/frequency.c
*** sts-2.1.2_orginal/sts-2.1.2/src/frequency.c	2020-02-07 10:15:28.011200182 +0530
--- sts-2.1.2/sts-2.1.2/src/frequency.c	2020-02-06 13:15:21.098288605 +0530
***************
*** 2,7 ****
--- 2,8 ----
  #include <math.h>
  #include <string.h>
  #include "../include/externs.h"
+ #include "../include/cephes.h"
  
  /* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
                            F R E Q U E N C Y  T E S T
diff -crB sts-2.1.2_orginal/sts-2.1.2/src/generators.c sts-2.1.2/sts-2.1.2/src/generators.c
*** sts-2.1.2_orginal/sts-2.1.2/src/generators.c	2020-02-07 10:15:28.011200182 +0530
--- sts-2.1.2/sts-2.1.2/src/generators.c	2020-02-06 13:17:02.508172019 +0530
***************
*** 45,51 ****
  lcg()
  {
  	double	*DUNIF, SEED;
! 	int		i, counter;
  	unsigned bit;
  	int		num_0s, num_1s, v, bitsRead;
  
--- 45,51 ----
  lcg()
  {
  	double	*DUNIF, SEED;
! 	int		i;
  	unsigned bit;
  	int		num_0s, num_1s, v, bitsRead;
  
***************
*** 55,61 ****
  		printf("Insufficient memory available.\n");
  		exit(1);
  	}
- 	counter = 1;
   
  	for ( v=0; v<tp.numOfBitStreams; v++ ) {
  		num_0s = 0;
--- 55,60 ----
***************
*** 453,456 ****
  		nist_test_suite();
  	}
  	free(epsilon);
! }
\ No newline at end of file
--- 452,455 ----
  		nist_test_suite();
  	}
  	free(epsilon);
! }
diff -crB sts-2.1.2_orginal/sts-2.1.2/src/genutils.c sts-2.1.2/sts-2.1.2/src/genutils.c
*** sts-2.1.2_orginal/sts-2.1.2/src/genutils.c	2020-02-07 10:15:28.011200182 +0530
--- sts-2.1.2/sts-2.1.2/src/genutils.c	2020-02-06 13:17:37.047451295 +0530
***************
*** 172,181 ****
  ******************************************/
  int Mult(BYTE *A, BYTE *B, int LB, BYTE *C, int LC)
  {
! 	int		i, j, k, LA;
  	DIGIT	result;
  
- 	LA = LB + LC;
  
  	for ( i=LB-1; i>=0; i-- ) {
  		result = 0;
--- 172,180 ----
  ******************************************/
  int Mult(BYTE *A, BYTE *B, int LB, BYTE *C, int LC)
  {
! 	int		i, j, k;
  	DIGIT	result;
  
  
  	for ( i=LB-1; i>=0; i-- ) {
  		result = 0;
***************
*** 664,667 ****
          nibble -= '0';
  		p_binary[i] += nibble;
  	}
! }
\ No newline at end of file
--- 663,666 ----
          nibble -= '0';
  		p_binary[i] += nibble;
  	}
! }
diff -crB sts-2.1.2_orginal/sts-2.1.2/src/matrix.c sts-2.1.2/sts-2.1.2/src/matrix.c
*** sts-2.1.2_orginal/sts-2.1.2/src/matrix.c	2020-02-07 10:15:28.011200182 +0530
--- sts-2.1.2/sts-2.1.2/src/matrix.c	2020-02-06 13:19:10.861494036 +0530
***************
*** 68,81 ****
  		index = i+1;
  		while ( (index < M) && (A[index][i] == 0) ) 
  			index++;
! 			if ( index < M )
  				row_op = swap_rows(i, index, Q, A);
  	}
  	else {
  		index = i-1;
  		while ( (index >= 0) && (A[index][i] == 0) ) 
  			index--;
! 			if ( index >= 0 )
  				row_op = swap_rows(i, index, Q, A);
  	}
  	
--- 68,83 ----
  		index = i+1;
  		while ( (index < M) && (A[index][i] == 0) ) 
  			index++;
! 
! 		if ( index < M )
  				row_op = swap_rows(i, index, Q, A);
  	}
  	else {
  		index = i-1;
  		while ( (index >= 0) && (A[index][i] == 0) ) 
  			index--;
! 
! 		if ( index >= 0 )
  				row_op = swap_rows(i, index, Q, A);
  	}
  	
diff -crB sts-2.1.2_orginal/sts-2.1.2/src/nonOverlappingTemplateMatchings.c sts-2.1.2/sts-2.1.2/src/nonOverlappingTemplateMatchings.c
*** sts-2.1.2_orginal/sts-2.1.2/src/nonOverlappingTemplateMatchings.c	2020-02-07 10:15:28.011200182 +0530
--- sts-2.1.2/sts-2.1.2/src/nonOverlappingTemplateMatchings.c	2020-02-06 13:19:45.424773092 +0530
***************
*** 21,27 ****
  	number of nonperiodic templates for that file be stored in the m-th 
  	position in the numOfTemplates variable.
  	----------------------------------------------------------------------------*/
! 	unsigned int	bit, W_obs, nu[6], *Wj = NULL; 
  	FILE			*fp = NULL;
  	double			sum, chi2, p_value, lambda, pi[6], varWj;
  	int				i, j, jj, k, match, SKIP, M, N, K = 5;
--- 21,27 ----
  	number of nonperiodic templates for that file be stored in the m-th 
  	position in the numOfTemplates variable.
  	----------------------------------------------------------------------------*/
! 	unsigned int	bit, W_obs, *Wj = NULL; 
  	FILE			*fp = NULL;
  	double			sum, chi2, p_value, lambda, pi[6], varWj;
  	int				i, j, jj, k, match, SKIP, M, N, K = 5;
***************
*** 88,95 ****
  				fprintf(stats[TEST_NONPERIODIC], "%d", sequence[k]);
  			}
  			fprintf(stats[TEST_NONPERIODIC], " ");
- 			for ( k=0; k<=K; k++ )
- 				nu[k] = 0;
  			for ( i=0; i<N; i++ ) {
  				W_obs = 0;
  				for ( j=0; j<M-m+1; j++ ) {
--- 88,93 ----
diff -crB sts-2.1.2_orginal/sts-2.1.2/src/utilities.c sts-2.1.2/sts-2.1.2/src/utilities.c
*** sts-2.1.2_orginal/sts-2.1.2/src/utilities.c	2020-02-07 10:15:28.011200182 +0530
--- sts-2.1.2/sts-2.1.2/src/utilities.c	2020-02-06 13:15:21.074289107 +0530
***************
*** 10,15 ****
--- 10,16 ----
  #include "../include/utilities.h"
  #include "../include/generators.h"
  #include "../include/stat_fncs.h"
+ #include "../include/cephes.h"
  
  int
  displayGeneratorOptions()
***************
*** 24,30 ****
  	printf("    [6] Modular Exponentiation     [7] Blum-Blum-Shub\n");
  	printf("    [8] Micali-Schnorr             [9] G Using SHA-1\n\n");
  	printf("   Enter Choice: ");
! 	scanf("%d", &option);
  	printf("\n\n");
  
  	return option;
--- 25,31 ----
  	printf("    [6] Modular Exponentiation     [7] Blum-Blum-Shub\n");
  	printf("    [8] Micali-Schnorr             [9] G Using SHA-1\n\n");
  	printf("   Enter Choice: ");
! 	option = 0;
  	printf("\n\n");
  
  	return option;
***************
*** 34,40 ****
  int
  generatorOptions(char** streamFile)
  {
! 	char	file[200];
  	int		option = NUMOFGENERATORS+1;
  	FILE	*fp;
  	
--- 35,41 ----
  int
  generatorOptions(char** streamFile)
  {
! 	char	file[200] = {"data.txt"};
  	int		option = NUMOFGENERATORS+1;
  	FILE	*fp;
  	
***************
*** 43,49 ****
  		switch( option ) {
  			case 0:
  				printf("\t\tUser Prescribed Input File: ");
- 				scanf("%s", file);
  				*streamFile = (char*)calloc(200, sizeof(char));
  				sprintf(*streamFile, "%s", file);
  				printf("\n");
--- 44,49 ----
***************
*** 115,121 ****
  	printf("            Enter 0 if you DO NOT want to apply all of the\n");
  	printf("            statistical tests to each sequence and 1 if you DO.\n\n");
  	printf("   Enter Choice: ");
! 	scanf("%d", &testVector[0]);
  	printf("\n");
  	if ( testVector[0] == 1 )
  		for( i=1; i<=NUMOFTESTS; i++ )
--- 115,122 ----
  	printf("            Enter 0 if you DO NOT want to apply all of the\n");
  	printf("            statistical tests to each sequence and 1 if you DO.\n\n");
  	printf("   Enter Choice: ");
! 
! 	testVector[0] = 0;
  	printf("\n");
  	if ( testVector[0] == 1 )
  		for( i=1; i<=NUMOFTESTS; i++ )
***************
*** 127,135 ****
  		printf("      123456789111111\n");
  		printf("               012345\n");
  		printf("      ");
! 		for ( i=1; i<=NUMOFTESTS; i++ ) 
! 			scanf("%1d", &testVector[i]);
! 		printf("\n\n");
  	}
  }
  
--- 128,135 ----
  		printf("      123456789111111\n");
  		printf("               012345\n");
  		printf("      ");
! 		for ( i=1; i<=NUMOFTESTS; i++ )
! 			testVector[i]= (test_select >> i) & 1;
  	}
  }
  
***************
*** 163,169 ****
  			printf("    [%d] Linear Complexity Test - block length(M):       %d\n", counter++, tp.linearComplexitySequenceLength);
  		printf("\n");
  		printf("   Select Test (0 to continue): ");
! 		scanf("%1d", &testid);
  		printf("\n");
  		
  		counter = 0;
--- 163,169 ----
  			printf("    [%d] Linear Complexity Test - block length(M):       %d\n", counter++, tp.linearComplexitySequenceLength);
  		printf("\n");
  		printf("   Select Test (0 to continue): ");
! 		testid = 0;
  		printf("\n");
  		
  		counter = 0;
***************
*** 235,241 ****
  	printf("    [0] ASCII - A sequence of ASCII 0's and 1's\n");
  	printf("    [1] Binary - Each byte in data file contains 8 bits of data\n\n");
  	printf("   Select input mode:  ");
! 	scanf("%1d", &mode);
  	printf("\n");
  	if ( mode == 0 ) {
  		if ( (fp = fopen(streamFile, "r")) == NULL ) {
--- 235,241 ----
  	printf("    [0] ASCII - A sequence of ASCII 0's and 1's\n");
  	printf("    [1] Binary - Each byte in data file contains 8 bits of data\n\n");
  	printf("   Select input mode:  ");
!         mode = 0;
  	printf("\n");
  	if ( mode == 0 ) {
  		if ( (fp = fopen(streamFile, "r")) == NULL ) {
***************
*** 376,382 ****
  		exit(-1);
  	}
  	sprintf(summaryfn, "experiments/%s/finalAnalysisReport.txt", generatorDir[option]);
! 	if ( (summary = fopen(summaryfn, "w")) == NULL ) {
  		printf("\t\tMAIN:  Could not open stats file: <%s>", summaryfn);
  		exit(-1);
  	}
--- 376,382 ----
  		exit(-1);
  	}
  	sprintf(summaryfn, "experiments/%s/finalAnalysisReport.txt", generatorDir[option]);
! 	if ( (summary = fopen(summaryfn, "a")) == NULL ) {
  		printf("\t\tMAIN:  Could not open stats file: <%s>", summaryfn);
  		exit(-1);
  	}
***************
*** 404,410 ****
  		}
  	}
  	printf("   How many bitstreams? ");
! 	scanf("%d", &numOfBitStreams);
  	tp.numOfBitStreams = numOfBitStreams;
  	printf("\n");
  }
--- 404,410 ----
  		}
  	}
  	printf("   How many bitstreams? ");
!     	numOfBitStreams=10;
  	tp.numOfBitStreams = numOfBitStreams;
  	printf("\n");
  }
***************
*** 507,510 ****
  	
  	if ( (testVector[0] == 1) || (testVector[TEST_LINEARCOMPLEXITY] == 1) )
  		LinearComplexity(tp.linearComplexitySequenceLength, tp.n);
! }
\ No newline at end of file
--- 507,510 ----
  	
  	if ( (testVector[0] == 1) || (testVector[TEST_LINEARCOMPLEXITY] == 1) )
  		LinearComplexity(tp.linearComplexitySequenceLength, tp.n);
! }
